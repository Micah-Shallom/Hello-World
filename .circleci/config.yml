version: 2.1

commands:
  print_pipeline_id:
    description: 'command containing repeated steps for printing workflow id'
    parameters:
      to:
        type: string
        default: "Workflow_id"
    steps:
        - run: echo $CIRCLE_WORKFLOW_ID


jobs:

  print_workflow_id:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id

  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: touch ~/output.txt ; sudo chmod 777 ~/output.txt
      - run: echo "Hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - "output.txt"

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: ls ~/ 
      - run: cat ~/output.txt
  
  #defining a job that intentionally contains an error
  error_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run : 
          command: |
            echo "Error On the build.............."
            exit 125
      - run: echo "This step ran because their was a failure on the job"
          when: on_fail


workflows:
  new_workflow:
    jobs:
      - error_job
      - print_workflow_id
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
  